{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,iCAAiC,sBAAsB,oBAAoB,kBAAkB,GAAG,cAAc,mBAAmB,GAAG,C;;;;;;;;;;;ACApI,iT;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEI;AAC4B;AAC7B;AAQ7C;IAME,sBACS,MAAiB,EAChB,WAAwB;QADzB,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QALlC,UAAK,GAAG,KAAK,CAAC;IAKuB,CAAC;IAEtC,+BAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,iCAAU,GAAV;QAAA,iBAWC;QAVC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,UAAC,MAAM;YACL,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;YACvD,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAzBU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASiB,2DAAS;YACH,yDAAW;OARvB,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACyB;AACW;AACrB;AACH;AACS;AACP;AACE;AACJ;AACM;AACJ;AACI;AACF;AACF;AAER;AACS;AACF;AACoB;AAC7B;AAuC7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QApCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,mEAAa;gBACb,uFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,sEAAgB;gBAEhB,iEAAe;gBACf,sEAAc;gBACd,wEAAe;gBACf,oEAAa;gBACb,2EAAgB;gBAChB,oEAAa;gBACb,2EAAgB;gBAChB,yEAAe;gBACf,uEAAc;gBACd,uEAAc;aAEf;YACD,SAAS,EAAE;gBACT,0DAAW;aACZ;YAED,eAAe,EAAG;gBAChB,uFAAmB;aACpB;YAED,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3DtB,mB;;;;;;;;;;;ACAA,qsBAAqsB,qQAAqQ,aAAa,uGAAuG,uK;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5gC;AACD;AAClB;AAO/B;IASE,6BACS,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAR7C,gBAAW,GAAW,EAAE,CAAC;QAEzB,UAAK,GAAG;YACd,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;YAC3B,OAAO,EAAE,IAAI;SACd,CAAC;IAGuD,CAAC;IAE1D,sCAAQ,GAAR;IACA,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAK;QAChB,sCAAsC;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IA3BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAWoB,8DAAY;OAVrB,mBAAmB,CA4B/B;IAAD,0BAAC;CAAA;AA5B+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACiC;AAC9C;AAG9B;IAIE,qBAAoB,IAAgB;QAApC,iBAcC;QAdmB,SAAI,GAAJ,IAAI,CAAY;QAF7B,UAAK,GAAW,EAAE,CAAC;QAGxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9B,UAAC,KAAY;YACX,GAAG,EAAU,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;gBAAd,IAAI,CAAC;gBACP,KAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CACN,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC,SAAS,EACpB,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC,OAAO,EACpB,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,KAAK,CACb,CACF,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU,EAAE,IAAU;QAA7B,iBA2BC;QA1BC,IAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;aAC3E,SAAS,CAAC,UAAC,KAAU;YACpB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzC,sBAAsB;gBACtB,IAAI,CAAC,GAAQ,KAAK,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CACN,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC,SAAS,EACpB,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC,OAAO,EACpB,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,KAAK,CACb,CACF,CAAC;YACJ,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;QACH,CAAC,CAAC;IAGN,CAAC;IAED,0BAAI,GAAJ,UAAK,EAAU;QAAf,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC;aAC7B,SAAS,CACR,UAAC,KAAU;YACT,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;YAC3C,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACxB,CAAC,CACF,CAAC;IACN,CAAC;IAED,4BAAM,GAAN,UAAO,EAAU;QAAjB,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;aAC3B,SAAS,CAAE,UAAC,KAAK;YAChB,sBAAsB;YACtB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACT,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAnEU,WAAW;QADvB,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,WAAW,CAsEvB;IAAD,kBAAC;CAAA;AAtEuB;;;;;;;;;;;;;;ACLxB;AAAA;IACI,cACW,MAAe,EACf,SAAkB,EAClB,QAAiB,EACjB,OAAgB,EAChB,EAAW,EACX,KAAc;QALd,WAAM,GAAN,MAAM,CAAS;QACf,cAAS,GAAT,SAAS,CAAS;QAClB,aAAQ,GAAR,QAAQ,CAAS;QACjB,YAAO,GAAP,OAAO,CAAS;QAChB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAS;IACtB,CAAC;IACR,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACTD,yBAAyB,uBAAuB,mBAAmB,mBAAmB,GAAG,sBAAsB,yBAAyB,mBAAmB,GAAG,C;;;;;;;;;;;ACA9J,gIAAgI,aAAa,4CAA4C,gBAAgB,mFAAmF,cAAc,yEAAyE,eAAe,gY;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzU;AAC1B;AACe;AAO9C;IAIE,uBACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEvC,gCAAQ,GAAR;IACA,CAAC;IAED,4BAAI,GAAJ;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,8BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAdQ;QAAR,2DAAK,EAAE;kCAAO,0CAAI;+CAAC;IAFT,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMuB,yDAAW;OALvB,aAAa,CAiBzB;IAAD,oBAAC;CAAA;AAjByB;;;;;;;;;;;;;;ACT1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button {\\n    position: fixed;\\n    bottom: 100px;\\n    right: 90px;\\n}\\n\\napp-post {\\n    margin: 20px;\\n}\"","module.exports = \"<div class=\\\"tz-gallery\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n    <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n\n  title = 'app';\n  private posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    private postService: PostService) {}\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.postService.salvar(result.post, result.arquivo);\n        }\n      }\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n  \n  entryComponents : [\n    PostDialogComponent\n  ], \n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\n    <div fxLaylout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Titulo da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Subtitulo de mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n        </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n        <textarea matInput placeholder=\\\"Deixei aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n    </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display: none;\\\" (change)=\\\"mudouarquivo($event)\\\" #fileinput>\\n\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n  <mat-icon>add_a_photo</mat-icon>\\n  Adicionar uma Foto\\n</button>\\n<p *ngIf=\\\"nomearquivo!=''\\\">\\n    <strong>Arquivo: </strong>{{nomearquivo}}\\n    <mat-icon color=\\\"primary\\\">done</mat-icon>\\n</p>\\n\\n<br><br>\\n\\n<div style=\\\"text-align: center;\\\">\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">OK</button>\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomearquivo: string = '';\n\n  private dados = {\n    post: new Post(\"\",\"\",\"\",\"\"),\n    arquivo: null\n  };\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  mudouarquivo(event) {\n    // console.log(event.target.files[0]);\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogref.close(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable()\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get(\"/api/\").subscribe(\n      (posts: any[]) => {\n        for(let p of posts) {\n          this.posts.push(\n            new Post(\n              p.titulo,p.subtitulo,\n              p.mensagem,p.arquivo,\n              p.id,p.likes\n            )\n          );\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api\", uploadData, { reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if (event.type == HttpEventType.Response) {\n          // console.log(event);\n          let p: any = event.body;\n          this.posts.push(\n            new Post(\n              p.titulo,p.subtitulo,\n              p.mensagem,p.arquivo,\n              p.id,p.likes\n            )\n          );\n        }\n        if (event.type == HttpEventType.UploadProgress) {\n          console.log('UploadProgress');\n          console.log(event);\n        }\n      })\n\n\n  }\n\n  like(id: number) {\n    this.http.get('/api/like/' + id)\n      .subscribe(\n        (event: any) => {\n          let p = this.posts.find((p) => p.id == id);\n          p.likes = event.likes;\n        }\n      );\n  }\n\n  apagar(id: number) {\n    this.http.delete(\"/api/\" + id)\n      .subscribe( (event) => {\n        // console.log(event);\n        let i = this.posts.findIndex((p) => p.id == id);\n        if (i >= 0)\n          this.posts.splice(i,1);\n      });\n  }\n\n\n}\n","export class Post {\n    constructor(\n        public titulo?: string,\n        public subtitulo?: string,\n        public mensagem?: string,\n        public arquivo?: string,\n        public id?: number,\n        public likes?: number\n    ) {}\n}\n","module.exports = \".card {\\n    max-width: 300px;\\n    width: 300px;\\n    margin: 10px;\\n}\\n\\nmat-card-actions {\\n    position: absolute;\\n    bottom: 30px;\\n}\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{post.titulo}}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n      {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"like()\\\">LIKE</button>\\n   \\n    <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge]=\\\"post.likes\\\" \\n              matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\"\\n              matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n  \n  constructor(\n    private postService: PostService) { }\n  \n  ngOnInit() {\n  }\n\n  like() {\n    this.postService.like(this.post.id);\n  }\n\n  apagar() {\n    this.postService.apagar(this.post.id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}